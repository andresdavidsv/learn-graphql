"Validate Levels"
enum Level{
  beginner
  intermate
  advanced
}

type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
  level: Level
}

type Student{
  _id:ID!
  name: String!
  email: String!
}

type Query {
  "Return All courses"
  getCourses: [Course]
  "Return one Course"
  getCourse(id: ID!): Course
  "Return All students"
  getStudents: [Student]
  "Return one Student"
  getStudent(id: ID!): Student
}

input CourseInput{
  title: String!
  teacher: String
  description: String!
  topic: String
  level:Level
}
input CourseEditInput{
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentInput{
  name: String!
  email: String!
}
input StudentEditInput{
  name: String
  email: String
}

type Mutation{
  "Create a course"
  createCourse(input: CourseInput!): Course
  "Edit a course"
  editCourse(_id:ID!, input: CourseEditInput): Course
  "Delete a course"
  deleteCourse(_id: ID!): Boolean
  "Create a student"
  createStudent(input: StudentInput!): Student
  "Edit a student"
  editStudent(_id:ID!,input: StudentEditInput): Student
  "Delete a student"
  deleteStudent(_id: ID!): Boolean
  "Add a person to one Course"
  addPeople(courseID:ID!, personID:ID!): Course
}
